import { TfIdf } from "natural";
interface MeasureKeyField {
    measure: number;
    key: string;
    field: string;
}
interface WordMeasure {
    word: string;
    measures: MeasureKeyField[];
}
interface Result<T> {
    key: string;
    score: number;
    doc: T;
}
declare class Index<D extends Record<string, string>> {
    tfidf: TfIdf;
    index: Record<string, string>;
    docs: Record<string, D>;
    addDocument(key: string, doc: D): void;
    private tfidfs;
    query(query: string): Result<D>[];
}
export { Index, MeasureKeyField, WordMeasure, Result };
